历时3天完成
设计到的知识点：bio、线程池、优先级阻塞队列、volatile

优点：
   1、开销小，malloc+free 均使用位运算
   2、当多个请求过来时，异步处理不会阻塞
   3、原子操作，且加入内存屏障来禁止编译器指令重排，保障了内存空间的并发分配和并发回收

缺点：
   1、采用笨重的方法，等待Client来free,不能识别哪些内存块长久被占用

疑惑点：
一、内存块不够分配的情况下，新的client Malloc请求均加入优先阻塞队列
    1):是记录这个请求的时间,按照最短时间来分配
                     Min(Property.getTime())
    2):记录这个请求的分配块大小,按照最小内存块的分配
                     Min(Property.getMallocCounts())
二、内存块不够分配的情况下,采取什么样的形式通知Client
    1)：通知client,丢回客户端处理，让客户端过一段时间再次来请求，
                                    sleep(2)--->request again
    2)：Server不通知Client,等待Client free()时再去遍历阻塞队列是否有合适的请求内存块
                                    free --> queue.poll()